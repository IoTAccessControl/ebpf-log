Disassemble of BPF program handle_pkt:
   0: (bf) r6 = r1
   1: (b7) r1 = 0
   2: (7b) *(u64*)(r10 -24) = r1
   3: (28) r0 = *(u16*)skb[12]
   4: (55) if r0 != 2048 goto pc+62 <67>
   5: (20) r0 = *(u32*)skb[30]
   6: (67) r0 <<= 32
   7: (77) r0 >>= 32
   8: (b7) r1 = 0
   9: (7b) *(u64*)(r10 -24) = r1
  10: (b7) r9 = 1
  11: (18) r7 = <map at fd #-1062723318>
  13:      (64-bit upper word)
  13: (b7) r8 = 1
  14: (5d) if r0 != r7 goto pc+1 <16>
  15: (b7) r8 = 0
  16: (20) r0 = *(u32*)skb[26]
  17: (67) r0 <<= 32
  18: (77) r0 >>= 32
  19: (5d) if r0 != r7 goto pc+1 <21>
  20: (b7) r9 = 0
  21: (5f) r9 &= r8
  22: (30) r0 = *(u8*)skb[14]
  23: (bf) r8 = r0
  24: (57) r9 &= 0x1
  25: (28) r0 = *(u16*)skb[16]
  26: (7b) *(u64*)(r10 -32) = r0
  27: (55) if r9 != 0 goto pc+39 <67>
  28: (67) r8 <<= 2
  29: (57) r8 &= 0x3c
  30: (bf) r1 = r8
  31: (67) r1 <<= 32
  32: (77) r1 >>= 32
  33: (b7) r2 = 20
  34: (2d) if r2 > r1 goto pc+32 <67>
  35: (30) r0 = *(u8*)skb[23]
  36: (55) if r0 != 6 goto pc+30 <67>
  37: (79) r7 = *(u64*)(r10 -32)
  38: (1f) r7 -= r8
  39: (bf) r9 = r8
  40: (67) r9 <<= 32
  41: (77) r9 >>= 32
  42: (07) r9 += 26
  43: (50) r0 = *(u8*)skb[r9 +0]
  44: (77) r0 >>= 2
  45: (57) r0 &= 0x3c
  46: (1f) r7 -= r0
  47: (67) r7 <<= 32
  48: (77) r7 >>= 32
  49: (b7) r1 = 7
  50: (2d) if r1 > r7 goto pc+16 <67>
  51: (b7) r1 = 680997
  52: (63) *(u32*)(r10 -8) = r1
  53: (18) r1 = 0x206425203a706374
  55:      (64-bit upper word)
  55: (7b) *(u64*)(r10 -16) = r1
  56: (0f) r8 += r0
  57: (07) r8 += 14
  58: (bf) r1 = r10
  59: (07) r1 += -16
  60: (b7) r2 = 12
  61: (b7) r3 = 11
  62: (bf) r4 = r8
  63: (85) call bpf_trace_printk#6
  64: (18) r1 = <map at fd #-1>
  66:      (64-bit upper word)
  66: (7b) *(u64*)(r10 -24) = r1
  67: (79) r0 = *(u64*)(r10 -24)
  68: (95) exit